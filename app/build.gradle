apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

apply from: "$rootDir/android.gradle"
apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/keys.gradle"
apply from: "$rootDir/bugreporting.gradle"

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId androidApplicationId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode androidVersionCode
        versionName androidVersionName

        testInstrumentationRunner appTestInstrumentationRunner
        testApplicationId appTestApplicationId

        multiDexEnabled true

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"

        buildConfigField 'String[]', 'EMAIL_TO_ADDRESSES', buildConfigArray(emailBugsTo)
        buildConfigField 'String[]', 'EMAIL_CC_ADDRESSES', buildConfigArray(emailBugsCC)
        buildConfigField 'String[]', 'EMAIL_BCC_ADDRESSES', buildConfigArray(emailBugsBCC)

        manifestPlaceholders = [fabricKey: fabricApiKey]
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-annotations:22.2.0'
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    packagingOptions {
        exclude 'META-INF/services/org.codehaus.groovy.transform.ASTTransformation'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        release {
            storeFile file(releaseStoreFile)
            storePassword releaseStorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            testCoverageEnabled true
        }
    }
}

def buildConfigArray(String[] items) {
    StringBuilder builder = new StringBuilder();
    builder.append("{")

    items.eachWithIndex { itemString, index ->
        builder.append("\"${itemString}\"")

        if (index < items.length - 1) {
            builder.append(",")
        }
    }

    builder.append("}")
    return builder.toString()
}

dependencies {
    compile project(':data')

    apt "com.google.dagger:dagger-compiler:$daggerVersion"
    apt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    compile "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.squareup.picasso:picasso:$picassoVersion"
    compile "com.jakewharton.picasso:picasso2-okhttp3-downloader:$picassoDownloaderVersion"
    compile "de.hdodenhof:circleimageview:$circleImageViewVersion"
    compile "com.hannesdorfmann:adapterdelegates3:$adapterDelegatesVersion"
    compile "com.f2prateek.rx.preferences2:rx-preferences:$rxPrefsVersion"

    androidTestCompile "com.neenbedankt.gradle.plugins:android-apt:$aptVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexMakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestCompile "com.android.support.test:runner:$runnerVersion"
    androidTestCompile "com.android.support.test:testing-support-lib:$testingSupportLibVersion"
    androidTestCompile "org.codehaus.groovy:groovy:$groovyVersion:grooid"
    androidTestCompile "com.andrewreitz:spock-android:$spockVersion"
    androidTestApt "com.google.dagger:dagger-compiler:$daggerVersion"

    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "junit:junit:$jUnitVersion"
    testCompile "org.assertj:assertj-core:$assertJVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    debugCompile "com.mattprecious.telescope:telescope:$telescopeVersion"
    debugCompile "com.jakewharton.madge:madge:$madgeVersion"
    debugCompile "com.jakewharton.scalpel:scalpel:$scalpelVersion"
    debugCompile "com.jakewharton:process-phoenix:$processPhoenixVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    compile "com.jakewharton.timber:timber:$timberVersion"
    compile "com.facebook.stetho:stetho:$stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
    compile "com.fernandocejas:arrow:$arrowVersion"

    compile("com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion") {
        transitive = true;
    }
}
