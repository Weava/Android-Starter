apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

android {
    defaultPublishConfig "debug"

    def globalConfig = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfig.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfig.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfig.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfig.getAt("androidTargetSdkVersion")
        versionCode globalConfig.getAt("androidVersionCode")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        qa {

        }
        debug {

        }
    }
}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies
    def dataTestDependencies = rootProject.ext.dataTestDependencies
    def devDependencies = rootProject.ext.devDependencies

    /* Release */
    apt dataDependencies.daggerCompiler
    provided dataDependencies.javaxAnnotations
    compile dataDependencies.dagger
    compile dataDependencies.okHttp
    compile dataDependencies.gson
    compile dataDependencies.rxJava
    compile dataDependencies.rxAndroid
    compile dataDependencies.androidAnnotations
    compile dataDependencies.retrofit
    compile dataDependencies.retrofitRxAdapter
    compile dataDependencies.retrofitGson

    /* Test */
    testCompile dataTestDependencies.junit
    testCompile dataTestDependencies.assertj
    testCompile dataTestDependencies.mockito
    testCompile dataTestDependencies.robolectric

    /* Development */
    compile devDependencies.stetho
    compile devDependencies.stethoOkhttp
    compile devDependencies.timber
}
